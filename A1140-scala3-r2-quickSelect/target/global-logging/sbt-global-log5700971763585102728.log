[0m[[0m[0mdebug[0m] [0m[0m> Exec(test, Some(83ce0aff-8a5a-438d-a6d3-0a92af7cc232), Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0mEvaluating tasks: Test / test[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0minfo[0m] [0m[0mUpdating [0m
[0m[[0m[0minfo[0m] [0m[0mResolved  dependencies[0m
[0m[[0m[0minfo[0m] [0m[0mUpdating [0m
[0m[[0m[0minfo[0m] [0m[0mResolved  dependencies[0m
[0m[[0m[0minfo[0m] [0m[0mUpdating [0m
[0m[[0m[0minfo[0m] [0m[0mResolved  dependencies[0m
[0m[[0m[0minfo[0m] [0m[0mUpdating [0m
[0m[[0m[0minfo[0m] [0m[0mResolved  dependencies[0m
[0m[[0m[0minfo[0m] [0m[0mUpdating [0m
[0m[[0m[0minfo[0m] [0m[0mResolved  dependencies[0m
[0m[[0m[0minfo[0m] [0m[0mFetching artifacts of [0m
[0m[[0m[0minfo[0m] [0m[0mFetched artifacts of [0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 2 Scala sources to C:\Aalto\DSA\A1140-scala3-r2-quickSelect\target\scala-3.3.3\classes ...[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 1 Scala source to C:\Aalto\DSA\A1140-scala3-r2-quickSelect\target\scala-3.3.3\test-classes ...[0m
[0m[[0m[0minfo[0m] [0m[0m[32mQuickSelectSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mYour quickselect implementation[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should compute correct results on some selected inputs[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should compute correct results on some random inputs[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should be somewhat faster than the approach based on applying java.util.Arrays.sort on longish sequences of integers[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should be as fast as the approach based on applying java.util.Arrays.sort on longish almost-sorted sequences of integers[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- should be as fast as the approach based on applying java.util.Arrays.sort on sequences of small integers (=> lots of equal values in the array) *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  0.09466759193874613 was not greater than or equal to 1.0 (QuickSelectSpec.scala:131)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mRun completed in 4 seconds, 250 milliseconds.[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTotal number of tests run: 5[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mSuites: completed 1, aborted 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTests: succeeded 4, failed 1, canceled 0, ignored 0, pending 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m*** 1 TEST FAILED ***[0m[0m
[0m[[0m[31merror[0m] [0m[0mFailed tests:[0m
[0m[[0m[31merror[0m] [0m[0m	tests.QuickSelectSpec[0m
[0m[[0m[31merror[0m] [0m[0m(Test / [31mtest[0m) sbt.TestsFailedException: Tests unsuccessful[0m
[0m[[0m[31merror[0m] [0m[0mTotal time: 11 s, completed Sep 10, 2024, 9:03:02â€¯PM[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0mForcing garbage collection...[0m
