[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(tests.RadixSortSpec, org.scalatest.tools.Framework$$anon$1@279aff53, false, [SuiteSelector])[0m
[0m[[0m[0minfo[0m] [0m[0m[32mRadixSortSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mThe lsdRadixSort method[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should work correctly on arrays of non-negative integers[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should be faster than java.util.Arrays.sort on large arrays of non-negative integers[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- should work correctly on arrays of arbitrary integers *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  At index 0: 1068428590 was not equal to -531966094 (RadixSortSpec.scala:107)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- should be faster than java.util.Arrays.sort on large arrays of arbitrary integers *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  At index 0: 1069 was not equal to -2147483208 (RadixSortSpec.scala:49)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should be at most 3 times slower than java.util.Arrays.sort on large arrays of non-negative integers drawn from a small set (not included in the grader)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should be faster than java.util.Arrays.sort on large almost-sorted arrays of non-negative integers (not included in the grader)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mRun completed in 29 seconds, 47 milliseconds.[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTotal number of tests run: 6[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mSuites: completed 1, aborted 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTests: succeeded 4, failed 2, canceled 0, ignored 0, pending 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m*** 2 TESTS FAILED ***[0m[0m
[0m[[0m[31merror[0m] [0m[0mFailed tests:[0m
[0m[[0m[31merror[0m] [0m[0m	tests.RadixSortSpec[0m
[0m[[0m[31merror[0m] [0m[0m(Test / [31mtest[0m) sbt.TestsFailedException: Tests unsuccessful[0m
